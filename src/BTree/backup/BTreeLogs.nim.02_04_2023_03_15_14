import std/math
#import std/os
import strutils
import std/streams
import std/times

const BT_LOG_FILE* = "btree.log"

#Functions imported from c language
proc getchar*() {.importc: "getchar", header: "<stdio.h>".}
proc printf*(formatstr: cstring) {.importc: "printf", varargs, header: "<stdio.h>".}
proc log*(formatstr: cstring) {.importc: "printf", varargs, header: "<stdio.h>".}
proc snprintf(buf: cstring, cap: cint, frmt: cstring): cint {.header: "<stdio.h>", importc: "snprintf", varargs.}
proc sprintf(buf: cstring, frmt: cstring): cint {.header: "<stdio.h>", importc: "sprintf", varargs.}

var logstream* = newFileStream(BT_LOG_FILE, fmWrite)
proc logf*(str: string): void =
#{
   let dt = getDateStr()
   let tm = getClockStr()
   var logstr:string
   logstr.add("[")
   logstr.add(tm)
   logstr.add(":")
   logstr.add(dt)
   logstr.add("] ")
   logstr.add(str)
   #logstr.add("\n")
   logstream.writeLine(logstr)
   flushFile(stdout)
#}

proc logf*(arg1: int): void =
#{
   #var strout: string = newString(len(str) + sizeof(arg1))
   #discard snprintf(strout.cstring, 128, str.cstring, arg1.cint)
   var strout: string = newString(128)
   var slen = sprintf(strout.cstring,"%d",arg1.cint)
   strout.setLen(slen)
   logf(strout)
#}

proc logf*(str: string, arg1: int): void =
#{
   #var strout: string = newString(len(str) + sizeof(arg1))
   #discard snprintf(strout.cstring, 128, str.cstring, arg1.cint)
   var strout: string = newString(128)
   var slen = sprintf(strout.cstring, str.cstring, arg1.cint)
   strout.setLen(slen)
   logf(strout)
#}

proc logf*(str: string, arg1: int, arg2: int): void =
#{
   var strout: string = newString(128)
   #discard snprintf(strout.cstring, 128, str.cstring, arg1.cint, arg2.cint)
   var slen = sprintf(strout.cstring, str.cstring, arg1.cint, arg2.cint)
   strout.setLen(slen)
   logf(strout)
#}

proc logf*(str: string, arg1: int, arg2: int, arg3: int): void =
#{
   var strout: string = newString(128)
   #discard snprintf(strout.cstring, 128, str.cstring, arg1.cint, arg2.cint, arg3.cint)
   var slen = sprintf(strout.cstring, str.cstring, arg1.cint, arg2.cint, arg3.cint)
   strout.setLen(slen)
   logf(strout)
#}

proc logf*(str: string, arg1: int, arg2: int, arg3: int, arg4: int): void =
#{
   var strout: string = newString(128)
   #discard snprintf(strout.cstring, 128, str.cstring, arg1.cint, arg2.cint, arg3.cint, arg4.cint)
   var slen = sprintf(strout.cstring, str.cstring, arg1.cint, arg2.cint, arg3.cint, arg4.cint)
   strout.setLen (slen)
   logf(strout)
#}

proc logf*(str: string, arg1: string): void =
#{
   var strout: string = newString(128)
   #discard snprintf(strout.cstring, 128, str.cstring, arg1.cstring)
   var slen = sprintf(strout.cstring, str.cstring, arg1.cstring)
   strout.setLen (slen)
   logf(strout)
#}

proc logf*(str: string, arg1: cstring): void =
#{
   var strout: string = newString(128)
   #discard snprintf(strout.cstring, 128, str.cstring, arg1)
   var slen = sprintf(strout.cstring, str.cstring, arg1.cstring)
   strout.setLen (slen)
   logf(strout)
#}

proc logf*(str: string, arg1: string, arg2: int): void =
#{
   var strout: string = newString(128)
   #discard snprintf(strout.cstring, 128, str.cstring, arg1)
   var slen = sprintf(strout.cstring, str.cstring, arg1.cstring, arg2.cint)
   strout.setLen (slen)
   logf(strout)
#}


proc logf*(str: string, arg1: float): void =
#{
   var strout: string = newString(128)
   #discard snprintf(strout.cstring, 128, str.cstring, arg1.cfloat)
   var slen = sprintf(strout.cstring, str.cstring, arg1.cfloat)
   strout.setLen (slen)
   logf(strout)
#}
