#################################################
# BTreeMain.nim
#################################################

import CommonImports
import CommonLogger
import CommonUtils
import BTreeHeader
import BTreeUtils
import BTreeTraversal
import BTreeSearch
import BTreeCreate
import BTreePrints

#################################################
# Function   : main()
# Description: Process life begins from here 
#             
#################################################
proc main(): void =
#{
   #var datalist = @[50, 10, 64, 9, 70, 55, 12, 100, 42]
   #var datalist = @[50, 10, 64, 9, 70, 100, 120, 130, 140, 150, 160, 12]
   #Below one is a working datalist
   #var datalist = @[50, 10, 64, 9, 70, 100, 120, 68]
   #var datalist = @[50, 10, 64, 9, 70, 100, 120, 68, 130, 69]
   var datalist = @[50, 10, 64, 9, 70, 100, 120, 68, 130, 69, 15, 25, 30, 35, 40]

   printInput(datalist)
   for key in datalist: #{
     #cls()
     echo "\n\n\n\n\n"
     echo "Processing Input key [",key,"]"
     var parent: ref BTreeNode = nil
     discard createBTree(btroot, parent, key)
  
     getchar()
     #insertKey(btroot, key)
   #}

   #printBTreeNode(btroot)
   #printBTreeNode(getLeft(btroot))
   #printBTreeNode(getRight(btroot))
   printBTreeArrayF()
   printBTreeListF()
   #printListAddressF(btroot.bt_listhead)
   printInput(datalist)
   inorderBTree(btroot)
   log("Total BTreeNodes: %d\n", getbsize())
   log("Total ListNodes : %d\n", len(btlist))
#}

openLogger(BT_LOG_FILE)
main()
closeLogger()
